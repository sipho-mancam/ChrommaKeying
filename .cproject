<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569" name="Debug" parent="com.nvidia.cuda.ide.ten_two.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.ten_two.exe.debug.1885776313" name="CUDA Toolkit 10.2" superClass="com.nvidia.cuda.tools.toolchain.ten_two.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.362793614" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/CudaChromaUbuntu}/Debug" id="com.nvidia.cuda.ide.builder.1121912262" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 10.1 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.545996169" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1961751900" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.676945152" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.1479459548" name="Optimization Level" superClass="nvcc.compiler.optimization.level" value="nvcc.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.62065486" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.include.paths.190622102" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/local/include/opencv4"/>
									<listOptionValue builtIn="false" value="/home/jurie/Downloads/BlackmagicDeckLinkSDK12.0/Linux/include"/>
								</option>
								<option id="nvcc.compiler.usefastmath.1211643544" name="Make use of fast math library (-use_fast_math)" superClass="nvcc.compiler.usefastmath" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.cpp11option.2100472884" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.def.symbols.946859992" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="WFMO"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1820815897" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1040828850" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.604109156" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.981094484" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1134554664" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="nppig"/>
									<listOptionValue builtIn="false" value="opencv_cudawarping"/>
									<listOptionValue builtIn="false" value="GLU"/>
									<listOptionValue builtIn="false" value="opencv_cudacodec"/>
									<listOptionValue builtIn="false" value="glut"/>
									<listOptionValue builtIn="false" value="GL"/>
									<listOptionValue builtIn="false" value="opencv_cudafilters"/>
									<listOptionValue builtIn="false" value="opencv_cudaimgproc"/>
									<listOptionValue builtIn="false" value="nppim"/>
									<listOptionValue builtIn="false" value="nppist"/>
									<listOptionValue builtIn="false" value="nppisu"/>
									<listOptionValue builtIn="false" value="nppitc"/>
									<listOptionValue builtIn="false" value="npps"/>
									<listOptionValue builtIn="false" value="cuda"/>
									<listOptionValue builtIn="false" value="nppial"/>
									<listOptionValue builtIn="false" value="nppicc"/>
									<listOptionValue builtIn="false" value="nppidei"/>
									<listOptionValue builtIn="false" value="nppif"/>
									<listOptionValue builtIn="false" value="nppc"/>
									<listOptionValue builtIn="false" value="X11"/>
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
									<listOptionValue builtIn="false" value="opencv_cudaarithm"/>
									<listOptionValue builtIn="false" value="opencv_imgcodecs"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="opencv_videoio"/>
									<listOptionValue builtIn="false" value="opencv_cudalegacy"/>
									<listOptionValue builtIn="false" value="opencv_dnn"/>
									<listOptionValue builtIn="false" value="nvvpi"/>
									<listOptionValue builtIn="false" value="rt"/>
									<listOptionValue builtIn="false" value="nvToolsExt"/>
									<listOptionValue builtIn="false" value="freeimage"/>
									<listOptionValue builtIn="false" value="nvinfer"/>
								</option>
								<inputType id="nvcc.linker.input.937269481" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.164313326" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.201374519" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1989813051" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="7" minor="5"/>
					<ptx major="7" minor="5"/>
				</executable>
				<editor-arch major="7" minor="5"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.ten_two.configuration.release.2051825957">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.ten_two.configuration.release.2051825957" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.ten_two.configuration.release.2051825957" name="Release" parent="com.nvidia.cuda.ide.ten_two.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.ten_two.configuration.release.2051825957." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.ten_two.exe.release.1439014883" name="CUDA Toolkit 10.2" superClass="com.nvidia.cuda.ide.toolchain.ten_two.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.674993564" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/CudaChromaUbuntu}/Release" id="com.nvidia.cuda.ide.builder.127036453" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 10.1 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1400724814" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1804841498" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.1457129543" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.1127075003" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.498570791" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.include.paths.1894450851" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/src/src}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/src/plugin}&quot;"/>
									<listOptionValue builtIn="false" value="/usr/local/include/opencv4"/>
									<listOptionValue builtIn="false" value="/home/jurie/Downloads/BlackmagicDeckLinkSDK12.0/Linux/include"/>
								</option>
								<option id="nvcc.compiler.def.symbols.1201637917" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="WFMO"/>
								</option>
								<option id="nvcc.compiler.cpp11option.1655707316" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<inputType id="nvcc.compiler.input.cu.946709717" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1657749247" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.292446513" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1871253008" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.273912098" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="nppig"/>
									<listOptionValue builtIn="false" value="opencv_cudawarping"/>
									<listOptionValue builtIn="false" value="GLU"/>
									<listOptionValue builtIn="false" value="opencv_cudacodec"/>
									<listOptionValue builtIn="false" value="glut"/>
									<listOptionValue builtIn="false" value="GL"/>
									<listOptionValue builtIn="false" value="opencv_cudafilters"/>
									<listOptionValue builtIn="false" value="opencv_cudaimgproc"/>
									<listOptionValue builtIn="false" value="nppim"/>
									<listOptionValue builtIn="false" value="nppist"/>
									<listOptionValue builtIn="false" value="nppisu"/>
									<listOptionValue builtIn="false" value="nppitc"/>
									<listOptionValue builtIn="false" value="npps"/>
									<listOptionValue builtIn="false" value="cuda"/>
									<listOptionValue builtIn="false" value="nppial"/>
									<listOptionValue builtIn="false" value="nppicc"/>
									<listOptionValue builtIn="false" value="nppidei"/>
									<listOptionValue builtIn="false" value="nppif"/>
									<listOptionValue builtIn="false" value="nppc"/>
									<listOptionValue builtIn="false" value="X11"/>
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
									<listOptionValue builtIn="false" value="opencv_cudaarithm"/>
									<listOptionValue builtIn="false" value="opencv_imgcodecs"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="opencv_videoio"/>
									<listOptionValue builtIn="false" value="opencv_cudalegacy"/>
									<listOptionValue builtIn="false" value="opencv_dnn"/>
									<listOptionValue builtIn="false" value="nvvpi"/>
									<listOptionValue builtIn="false" value="rt"/>
									<listOptionValue builtIn="false" value="nvToolsExt"/>
									<listOptionValue builtIn="false" value="freeimage"/>
									<listOptionValue builtIn="false" value="nvinfer"/>
								</option>
								<inputType id="nvcc.linker.input.952892169" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.777099850" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1861771196" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1622862398" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<folderInfo id="com.nvidia.cuda.ide.ten_two.configuration.release.2051825957.585254787" name="/" resourcePath="src">
						<toolChain id="com.nvidia.cuda.ide.toolchain.ten_two.exe.release.329149575" name="CUDA Toolkit 10.2" superClass="com.nvidia.cuda.ide.toolchain.ten_two.exe.release" unusedChildren="">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<tool id="nvcc.compiler.base.794256817" name="NVCC Compiler" superClass="nvcc.compiler.base.1400724814">
								<option id="nvcc.compiler.include.paths.1478022753" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/local/include/opencv4"/>
									<listOptionValue builtIn="false" value="/home/jurie/Downloads/BlackmagicDeckLinkSDK12.0/Linux/include"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1411876833" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1482835431" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.557002503" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1219936822" name="NVCC Linker" superClass="nvcc.linker.base.1871253008"/>
							<tool id="nvcc.archiver.base.541323664" name="NVCC Archiver" superClass="nvcc.archiver.base.777099850"/>
							<tool id="com.nvidia.host.assembler.1930363763" name="Host Assembler" superClass="com.nvidia.host.assembler.1861771196">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1270553154" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="true">
					<sass major="7" minor="5"/>
					<ptx major="7" minor="5"/>
				</executable>
				<editor-arch major="7" minor="5"/>
			</storageModule>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="CudaChromaUbuntu.com.nvidia.cuda.ide.ten_two.exe.400106757" name="Executable" projectType="com.nvidia.cuda.ide.ten_two.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569;com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569.;nvcc.compiler.base.545996169;nvcc.compiler.input.c.604109156">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569;com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569.;nvcc.compiler.base.545996169;nvcc.compiler.input.cu.1820815897">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569;com.nvidia.cuda.ide.ten_two.configuration.debug.1547244569.;nvcc.compiler.base.545996169;nvcc.compiler.input.cpp.1040828850">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
</cproject>
